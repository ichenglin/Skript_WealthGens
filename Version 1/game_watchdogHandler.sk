function game_watchdogHandler_checkOnlinePlayers():
	loop all players:
		set {_loopPlayer} to loop-player
		set {_loopPlayerUUID} to (loop-player's UUID)
		if game_playerLogHandler_getPlayerLogLength({_loopPlayerUUID}, "CHAT") <= 4:
			set {_watchdogPlayerCheck::SPAM} to false
		else if system_punishmentSystem_checkPunished({_loopPlayer}, "MUTE") is true:
			set {_watchdogPlayerCheck::SPAM} to false
		else if {-game_eventHandler::PLAYER_MESSAGES_COUNT::%{_loopPlayerUUID}%} >= 4:
			set {_watchdogPlayerCheck::SPAM} to true
		else if {-game_eventHandler::WATCHDOG_PLAYER_REPORTED::%{_loopPlayerUUID}%} >= 1:
			set {_watchdogPlayerCheck::SPAM} to true
		if {_watchdogPlayerCheck::SPAM} is true:
			set {_watchdogPlayerSpamDetection} to game_watchdogHandler_playerSpamFlag({_loopPlayerUUID})
			if {_watchdogPlayerSpamDetection} is true:
				system_punishmentSystem_registerPunishment({_loopPlayer}, "CONSOLE", "MUTE", "%system_punishmentSystem_textToSeconds(""1H"")%", "WealthGens WatchDog Detection (Spam)")
				send "%nl%&a[WatchDog] Player &f%game_playersHandler_getPlayerDisplayName({_loopPlayer})%&a has been muted for spamming.%nl%" to all players
				send "%nl%&a[WatchDog] Our system has recently detected you to be violating community guidelines, if you believe this is in error please contact an administrator.%nl%&a[WatchDog] Support ID: ##%game_groupsHandler_system_getRandomConfirmationCode(6)%%nl%" to {_loopPlayer}
				game_playerLogHandler_wipeLog({_loopPlayerUUID}, "CHAT")
				wait 4 ticks
			delete {_watchdogPlayerCheck::*}
			delete {_watchdogPlayerSpamDetection}
		wait 1 tick
	delete {-game_eventHandler::PLAYER_MESSAGES_COUNT::*}
	delete {-game_eventHandler::WATCHDOG_PLAYER_REPORTED::*}

function game_watchdogHandler_playerSpamFlag(playerUUID: text) :: boolean:

	# checker deleted
	return false

	set {_player} to ({_playerUUID} parsed as offline player)

	set {_playerPreviousChatLog::*} to game_playerLogHandler_getPlayerLatestLog({_playerUUID}, "CHAT", 5)

	if (amount of {_playerPreviousChatLog::*}) <= 1:
		return false

	set {_playerMessageListTextRaw} to join {_playerPreviousChatLog::*} with delimiter ""","""
	replace " " with "%%20" in {_playerMessageListTextRaw}

	set {_playerPreviousChatLogSimilarityJson} to text from url "URL_REMOVED?data={""player"":""%{_playerUUID}%"",""messages"":[""%{_playerMessageListTextRaw}%""]}"
	map json {_playerPreviousChatLogSimilarityJson} to {_playerPreviousChatLogSimilarityReport::*}

	send "&7&o[Watchdog Report] %{_player}% (TS: %{_playerPreviousChatLogSimilarityReport::text-similarity}%%%, SS: %{_playerPreviousChatLogSimilarityReport::structure-similarity}%%%, RR: %{_playerPreviousChatLogSimilarityReport::repeat-ratio}%%%, RL: %{_playerPreviousChatLogSimilarityReport::repeat-length}%%%)" to all players where [player input is a op]

	return {_playerPreviousChatLogSimilarityReport::spam-detected}